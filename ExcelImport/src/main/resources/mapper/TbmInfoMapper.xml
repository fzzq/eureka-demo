<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fzq.EecelImport.dao.TbmInfoMapper">
  <resultMap id="BaseResultMap" type="com.fzq.EecelImport.entity.TbmInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="tbm_model" jdbcType="VARCHAR" property="tbmModel" />
    <result column="tbm_type" jdbcType="INTEGER" property="tbmType" />
    <result column="diameter" jdbcType="DOUBLE" property="diameter" />
    <result column="device_len" jdbcType="DOUBLE" property="deviceLen" />
    <result column="device_weight" jdbcType="DOUBLE" property="deviceWeight" />
    <result column="device_power" jdbcType="DOUBLE" property="devicePower" />
    <result column="cutter_speed" jdbcType="VARCHAR" property="cutterSpeed" />
    <result column="motor_num" jdbcType="INTEGER" property="motorNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, tbm_model, tbm_type, diameter, device_len, device_weight, device_power, 
    cutter_speed, motor_num
  </sql>
  <select id="selectByExample" parameterType="com.fzq.EecelImport.entity.TbmInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tbm_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbm_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbm_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fzq.EecelImport.entity.TbmInfo">
    insert into tbm_info (id, code, tbm_model, 
      tbm_type, diameter, device_len, 
      device_weight, device_power, cutter_speed, 
      motor_num)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{tbmModel,jdbcType=VARCHAR}, 
      #{tbmType,jdbcType=INTEGER}, #{diameter,jdbcType=DOUBLE}, #{deviceLen,jdbcType=DOUBLE}, 
      #{deviceWeight,jdbcType=DOUBLE}, #{devicePower,jdbcType=DOUBLE}, #{cutterSpeed,jdbcType=VARCHAR}, 
      #{motorNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fzq.EecelImport.entity.TbmInfo">
    insert into tbm_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="tbmModel != null">
        tbm_model,
      </if>
      <if test="tbmType != null">
        tbm_type,
      </if>
      <if test="diameter != null">
        diameter,
      </if>
      <if test="deviceLen != null">
        device_len,
      </if>
      <if test="deviceWeight != null">
        device_weight,
      </if>
      <if test="devicePower != null">
        device_power,
      </if>
      <if test="cutterSpeed != null">
        cutter_speed,
      </if>
      <if test="motorNum != null">
        motor_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="tbmModel != null">
        #{tbmModel,jdbcType=VARCHAR},
      </if>
      <if test="tbmType != null">
        #{tbmType,jdbcType=INTEGER},
      </if>
      <if test="diameter != null">
        #{diameter,jdbcType=DOUBLE},
      </if>
      <if test="deviceLen != null">
        #{deviceLen,jdbcType=DOUBLE},
      </if>
      <if test="deviceWeight != null">
        #{deviceWeight,jdbcType=DOUBLE},
      </if>
      <if test="devicePower != null">
        #{devicePower,jdbcType=DOUBLE},
      </if>
      <if test="cutterSpeed != null">
        #{cutterSpeed,jdbcType=VARCHAR},
      </if>
      <if test="motorNum != null">
        #{motorNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update tbm_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.tbmModel != null">
        tbm_model = #{record.tbmModel,jdbcType=VARCHAR},
      </if>
      <if test="record.tbmType != null">
        tbm_type = #{record.tbmType,jdbcType=INTEGER},
      </if>
      <if test="record.diameter != null">
        diameter = #{record.diameter,jdbcType=DOUBLE},
      </if>
      <if test="record.deviceLen != null">
        device_len = #{record.deviceLen,jdbcType=DOUBLE},
      </if>
      <if test="record.deviceWeight != null">
        device_weight = #{record.deviceWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.devicePower != null">
        device_power = #{record.devicePower,jdbcType=DOUBLE},
      </if>
      <if test="record.cutterSpeed != null">
        cutter_speed = #{record.cutterSpeed,jdbcType=VARCHAR},
      </if>
      <if test="record.motorNum != null">
        motor_num = #{record.motorNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbm_info
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      tbm_model = #{record.tbmModel,jdbcType=VARCHAR},
      tbm_type = #{record.tbmType,jdbcType=INTEGER},
      diameter = #{record.diameter,jdbcType=DOUBLE},
      device_len = #{record.deviceLen,jdbcType=DOUBLE},
      device_weight = #{record.deviceWeight,jdbcType=DOUBLE},
      device_power = #{record.devicePower,jdbcType=DOUBLE},
      cutter_speed = #{record.cutterSpeed,jdbcType=VARCHAR},
      motor_num = #{record.motorNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fzq.EecelImport.entity.TbmInfo">
    update tbm_info
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="tbmModel != null">
        tbm_model = #{tbmModel,jdbcType=VARCHAR},
      </if>
      <if test="tbmType != null">
        tbm_type = #{tbmType,jdbcType=INTEGER},
      </if>
      <if test="diameter != null">
        diameter = #{diameter,jdbcType=DOUBLE},
      </if>
      <if test="deviceLen != null">
        device_len = #{deviceLen,jdbcType=DOUBLE},
      </if>
      <if test="deviceWeight != null">
        device_weight = #{deviceWeight,jdbcType=DOUBLE},
      </if>
      <if test="devicePower != null">
        device_power = #{devicePower,jdbcType=DOUBLE},
      </if>
      <if test="cutterSpeed != null">
        cutter_speed = #{cutterSpeed,jdbcType=VARCHAR},
      </if>
      <if test="motorNum != null">
        motor_num = #{motorNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fzq.EecelImport.entity.TbmInfo">
    update tbm_info
    set code = #{code,jdbcType=VARCHAR},
      tbm_model = #{tbmModel,jdbcType=VARCHAR},
      tbm_type = #{tbmType,jdbcType=INTEGER},
      diameter = #{diameter,jdbcType=DOUBLE},
      device_len = #{deviceLen,jdbcType=DOUBLE},
      device_weight = #{deviceWeight,jdbcType=DOUBLE},
      device_power = #{devicePower,jdbcType=DOUBLE},
      cutter_speed = #{cutterSpeed,jdbcType=VARCHAR},
      motor_num = #{motorNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>